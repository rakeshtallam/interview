Assignment 1

#First we need to Install MongoDB server using epel release Repo
vi dockerfile hello

yum -y update
yum clean all
yum -y install epel-release
yum clean all
yum -y install mongodb-server 
yum clean all

RUN mkdir -p /data/db

#By running the following commands we can run mongo db
#Opens a port for linked containers

EXPOSE 27017
ENTRYPOINT ["/usr/bin/mongod"]

#Installing python.

yum -y install python-pip
yum clean all

#To install Apache Tomcat 7 need to Install Java Openjdk7

yum install -y java-1.7.0-openjdk java-1.7.0-openjdk-devel && \
yum clean all

#Download Apache Tomcat 7 by using Wget
cd /tmp
wget http://apachemirror/tomcat/tomcat-7/v7.0.73/bin/apache-tomcat-7.0.73.tar.gz

#untar and move to proper location

cd /tmp
gunzip apache-tomcat-7.0.73.tar.gz
cd /tmp
tar -xzvf apache-tomcat-7.0.73.tar
cd /tmp
mv apache-tomcat-7.0.73 /opt/tomcat7

#Need to change the permissions of a file.

chmod -R 755 /opt/tomcat7

#Set an environment variable in the new container

cat ENV JAVA_HOME /opt/jdk1.7.0_79 >> /root/.bash_rc

#Opens a port for linked containers
EXPOSE 8080

#The command that runs when the container starts
CMD ["catalina.sh", "run"]

#Command to run the Dockerfile such that once the container boots, apache tomcat's home page is accessible from the host on port 7080:

docker build -f  -t hello .
docker run --name hello -p 7080:8080 sagydocker/test:latest


Assignment 2

variable=192.120.112, 192.168.120.113
for i in  $variable 
do
    # call your procedure/other scripts here below
    ssh $variable ; top ;df -h
done

Assignment 3

dd if=/* of=/mnt/images/1.iso bs=64K conv=noerror,sync
once you create a image please upload in to aws images or templates under EC2
